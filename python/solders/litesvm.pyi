from typing import Dict, Optional, Set

from solders.pubkey import Pubkey

class FeatureSet:
    def __init__(self, active: Dict[Pubkey, int], inactive: Set[Pubkey]) -> None: ...
    @property
    def active(self) -> Dict[Pubkey, int]: ...
    @active.setter
    def active(self, val: Dict[Pubkey, int]) -> None: ...
    @property
    def inactive(self) -> Set[Pubkey]: ...
    @inactive.setter
    def inactive(self, val: Set[Pubkey]) -> None: ...
    @staticmethod
    def default() -> "FeatureSet": ...
    @staticmethod
    def all_enabled() -> "FeatureSet": ...
    def is_active(self, feature_id: Pubkey) -> bool: ...
    def activated_slot(self, feature_id: Pubkey) -> Optional[int]:...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __richcmp__(self, other: "FeatureSet", op: int) -> bool: ...
